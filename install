#!/usr/bin/env python
import os
import subprocess
import sys


def _home(*args):
    return os.path.expanduser(os.path.join('~', *args))


_DCP_DIR = os.path.dirname(os.path.abspath(__file__))


def _dcp_dir(*args):
    return os.path.join(_DCP_DIR, *args)


_GITCONFIG = _home('.gitconfig')
_ZSHRC = _home('.zshrc')
_TMUX = _home('.tmux.conf')
_PYLINTRC = _home('.pylintrc')
_TMUX_OSX = _home('.tmux-osx.conf')
_VIM = _home('.vim')
_VIMRC = _home('.vimrc')
_GLOBAL_GITIGNORE = _home('.gitignore_global')


def _symlink(source, dest):
    if not os.path.exists(dest):
        print("Linking {0} -> {1}".format(source, dest))
        os.symlink(source, dest)


def main():
    subprocess.check_call('git submodule update --init --recursive', cwd=_DCP_DIR, shell=True)

    _symlink(_dcp_dir('.tmux.conf'), _TMUX)
    _symlink(_dcp_dir('.tmux-osx.conf'), _TMUX_OSX)
    _symlink(_dcp_dir('.pylintrc'), _PYLINTRC)
    _symlink(_dcp_dir('gitignore_global'), _GLOBAL_GITIGNORE)
    _symlink(_dcp_dir('vim'), _VIM)
    _symlink(_dcp_dir('vim', '.vimrc'), _VIMRC)
    _symlink(_dcp_dir('.zshrc'), _ZSHRC)
    _symlink(_dcp_dir('.spacemacs'), _home('.spacemacs'))
    _symlink(_dcp_dir('spacemacs'), _home('.emacs.d'))

    subprocess.check_call(['git', 'config', '--global', 'include.path', _dcp_dir('gitconfig')])



if __name__ == "__main__":
    sys.exit(main())
