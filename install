#!/usr/bin/env python
import os
import subprocess
import sys


def _home(*args):
    return os.path.expanduser(os.path.join('~', *args))


_DCP_DIR = os.path.dirname(os.path.abspath(__file__))


def _dcp_dir(*args):
    return os.path.join(_DCP_DIR, *args)


_GITCONFIG = _home('.gitconfig')
_ZSHRC = _home('.zshrc')
_TMUX = _home('.tmux.conf')
_VIM = _home('.vimrc')
_LOCAL_BIN = _home('bin')
_FASD = os.path.join(_LOCAL_BIN, 'fasd')
_GLOBAL_GITIGNORE = _home('.gitignore_global')


def _read(filename):
    with open(filename, 'r') as f:
        return f.read()


def _write(filename, content):
    with open(filename, 'w') as f:
        f.write(content)


def main():
    subprocess.check_call('git submodule update --init --recursive', cwd=_DCP_DIR, shell=True)

    if not os.path.isfile(_ZSHRC):
        print("Setting ZSHRC")
        template = _read(_dcp_dir('oh-my-zsh', 'templates', 'zshrc.zsh-template'))
        template = template.replace('export ZSH=$HOME/.oh-my-zsh', 'export ZSH="{0}"'.format(_dcp_dir('oh-my-zsh')))
        _write(_ZSHRC, template)

    if not os.path.isfile(_TMUX):
        print("Setting TMUX config")
        os.symlink(_dcp_dir('tmux-config', '.tmux.conf'), _TMUX)

    if not os.path.isdir(_LOCAL_BIN):
        print("Creating the local bin directory")
        os.mkdir(_LOCAL_BIN)

    if not os.path.isfile(_FASD):
        print("Setting FASD")
        os.symlink(_dcp_dir('fasd', 'fasd'), _FASD)

    if not os.path.isfile(_GLOBAL_GITIGNORE):
        print("Setting global git ignore")
        os.symlink(_dcp_dir('gitignore_global'), _GLOBAL_GITIGNORE)

    subprocess.check_call(['git', 'config', '--global', 'include.path', _dcp_dir('gitconfig')])

    if not os.path.isfile(_VIM):
        subprocess.check_call('curl https://raw.githubusercontent.com/amix/vimrc/master/vimrcs/basic.vim -o .vimrc', shell=True)


if __name__ == "__main__":
    sys.exit(main())
