#!/usr/bin/env python
import os
import subprocess
import sys
import argparse


def _home(*args):
    return os.path.expanduser(os.path.join('~', *args))


_DCP_DIR = os.path.dirname(os.path.abspath(__file__))


def _dcp_dir(*args):
    return os.path.join(_DCP_DIR, *args)


_GITCONFIG = _home('.gitconfig')
_ZSHRC = _home('.zshrc')
_ZPLUG = _home('.zplug')
_TMUX = _home('.tmux.conf')
_TPM = _home('.tmux/plugins/tpm')
_PYLINTRC = _home('.pylintrc')
_I3_BASE = _home('.config/i3')
_I3 = os.path.join(_I3_BASE, 'config')
_TERMINATOR_BASE = _home('.config/terminator')
_TERMINATOR = os.path.join(_TERMINATOR_BASE, 'config')
_NEOBUNDLE_BASE = _home('.vim', 'bundle')
_NEOBUNDLE_PATH = os.path.join(_NEOBUNDLE_BASE, 'neobundle.vim')
_VIMRC = _home('.vimrc')
_GLOBAL_GITIGNORE = _home('.gitignore_global')


def _symlink(source, dest):
    if not os.path.exists(dest):
        print("Linking {0} -> {1}".format(source, dest))
        os.symlink(source, dest)


def _checkout(path, repo, branch=None):
    if not os.path.exists(path):
        args = ['git', 'clone']
        if branch:
            args.extend(['--branch', branch])

        args.extend([repo, path])
        subprocess.check_call(args)


def _ensure_dir(path):
    if not os.path.exists(path):
        os.makedirs(path)



parser = argparse.ArgumentParser()
parser.add_argument('--no-emacs', action="store_true", default=False, required=False, help='Don\'t install Emacs')
parser.add_argument('--no-vim', action="store_true", default=False, required=False, help='Don\'t install Vim')

def main():
    args = parser.parse_args()

    print("Ensuring tmux config")
    _symlink(_dcp_dir('.tmux.conf'), _TMUX)
    _checkout(_TPM, 'https://github.com/tmux-plugins/tpm')

    print("Ensuring ZSH config")
    _checkout(_ZPLUG, 'https://github.com/b4b4r07/zplug.git')
    _symlink(_dcp_dir('.zshrc'), _ZSHRC)

    if not args.no_vim:
        print("Ensuring Vim config")
        _ensure_dir(_NEOBUNDLE_BASE)
        _checkout(_NEOBUNDLE_PATH, 'https://github.com/Shougo/neobundle.vim.git')
        _symlink(_dcp_dir('.vimrc'), _VIMRC)

    if not args.no_emacs:
        print("Ensuring Emacs config")
        _symlink(_dcp_dir('.spacemacs'), _home('.spacemacs'))
        _checkout(_home('.emacs.d'), 'https://github.com/syl20bnr/spacemacs.git', branch='develop')

    print("Ensuring other config files")
    subprocess.check_call(['git', 'config', '--global', 'include.path', _dcp_dir('gitconfig')])
    _symlink(_dcp_dir('.pylintrc'), _PYLINTRC)
    _symlink(_dcp_dir('gitignore_global'), _GLOBAL_GITIGNORE)

    _ensure_dir(_I3_BASE)
    _symlink(_dcp_dir('i3-config'), _I3)

    _ensure_dir(_TERMINATOR_BASE)
    _symlink(_dcp_dir('terminator-config'), _TERMINATOR)


if __name__ == "__main__":
    sys.exit(main())
